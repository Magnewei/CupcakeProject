@startuml
'https://plantuml.com/class-diagram

'Main
Main <-- config.ThymeleafConfig
Main <-- persistence.ConnectionPool
Main <-- controllers.UserController
Main <-- controllers.CupcakeController
Main <-- controllers.AdminController
Main <-- controllers.HeaderController


'entities
entities.Cupcake *-- entities.CupcakeTopping
entities.Cupcake *-- entities.CupcakeBottom
entities.Order *-- entities.OrderLine
entities.OrderLine *-- entities.Cupcake
entities.User *-- entities.Order

'persistence
persistence.UserMapper *-- persistence.ConnectionPool
persistence.CupcakeMapper *-- persistence.ConnectionPool
persistence.UserMapper <-- exceptions.DatabaseException

'controllers
controllers.CupcakeController *-- entities.Cupcake
controllers.UserController *-- entities.User

class Main {
-String USERNAME
-String PASSWORD
-String DB
-String URL
+void main(String args[])}
}

package entities {
class Cupcake{
-CupcakeBottom bottom
-CupcakeTopping topping
-int price
}

class User{
-String email
-String password
-String role
-int balance
}

class CupcakeBottom {
-String type
-int price
}
class CupcakeTopping {
-String type
-int price
}

class OrderLine{
-int price
-Cupcake cupcake
-int amount
}

class Order {
-int price
-List<OrderLine> orderLineList
-boolean isPaidFor
}

}

package exceptions {
class DatabaseException {}
}

package persistence {
class ConnectionPool {
+getInstance()
+getConnection()
+close()
-createHikariConnectionPool()
}

class CupcakeMapper {
+getAllBottoms()
+getAllToppings()
+getBottomById()
+getBottomByName()
+getCupcakeById()
+getCupcakeByPartIds()
+getToppingByName()
+getToppingById()
}

class UserMapper{
+User login()
+boolean createUser()
+void deleteUser()
+void addMoney()
+void removeMoney()
+boolean checkIfUserExistsByName()
}

class OrderMapper {
+void deleteOrderById()
+void deleteOrderlineById()
+List getAllOrders()
+int getLastOrder()
+List getOrderlineByUserId()
+List getOrderlineById()
+List GetOrderlinesPlusUsername
+void insertNewOrder()
+void insertNewOrderline()
+void updateIsPaidFor()
}
}

package config {
class ThymeleafConfig{}
}

package controllers{
class UserController{
-createUser()
-logout()
+login()
}

class CupcakeController{
+void orderCupcakes()
+void pay()
+void removeOrder()
+void seeCart()
}

class HeaderController {
+void createAdmin()
+void loadAdmin()
+void loadCart()
+void loadLogin()
+void loadShop
+void loadUser()
}

class AdminController {
+void addMoney()
+void removeOrderline()
+void removeUser()
}
}


@enduml